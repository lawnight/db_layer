<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd">

    <import resource="redisconfig.xml"/>

    <!-- 读取properties配置文件 -->
    <bean id="configProperties"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>app.properties</value>
            </list>
        </property>
    </bean>

    <!-- DB基础配置 -->
    <bean id="dbDriver" scope="singleton" class="java.lang.String">
        <constructor-arg value="com.mysql.jdbc.Driver"/>
    </bean>

    <bean id="dbUser" scope="singleton" class="java.lang.String">
        <constructor-arg value="${db.user}"/>
    </bean>
    <bean id="dbPass" scope="singleton" class="java.lang.String">
        <constructor-arg value="${db.pass}"/>
    </bean>


    <bean id=" slave_dbUrl" scope="singleton" class="java.lang.String">
        <constructor-arg
                value="jdbc:mysql://${db.host}/${db.slavename}?autoReconnect=true&amp;characterEncoding=utf-8&amp;zeroDateTimeBehavior=convertToNull"/>
    </bean>

    <!-- Master配置数据源 -->
    <bean id="abstractDataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" scope="singleton" destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="url"
                  value="jdbc:mysql://${db.host}/${db.mastername}?autoReconnect=true&amp;characterEncoding=utf-8&amp;zeroDateTimeBehavior=convertToNull"/>
        <property name="username" ref="dbUser"/>
        <property name="password" ref="dbPass"/>
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="${db.initialSize}"/>
        <property name="minIdle" value="${db.minIdle}"/>
        <property name="maxActive" value="${db.maxActive}"/>
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="${db.maxWait}"/>
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="${db.timeBetweenEvictionRunsMillis}"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="${db.minEvictableIdleTimeMillis}"/>
        <property name="validationQuery" value="${db.validationQuery}"/>
        <property name="testWhileIdle" value="${db.testWhileIdle}"/>
        <property name="testOnBorrow" value="${db.testOnBorrow}"/>
        <property name="testOnReturn" value="${db.testOnReturn}"/>
        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="stat"/>
        <property name="defaultAutoCommit" value="true"/>
    </bean>

    <bean id="master_ds" parent="abstractDataSource">
        <property name="url" ref="master_dbUrl"/>
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="abstractDataSource"/>
    </bean>

    <bean id="jdbctransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="abstractDataSource"/>
    </bean>


    <!-- Mybatis配置 -->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="master_sqlSessionFactory"/>
        <!--更新采用批量模式 -->
        <constructor-arg index="1" value="BATCH"/>
    </bean>


    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="master_ds"/>
    </bean>


    <bean id="master_sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="master_ds"/>
        <property name="configLocation">
            <value>master_settings.xml</value>
        </property>
        <!-- <property name="transactionFactory"> <bean class="org.apache.ibatis.transaction.managed.ManagedTransactionFactory"
            /> </property> -->
    </bean>


    <!-- slave配置 -->
    <!--<bean id="slave_ds" parent="abstractDataSource">-->
    <!--<property name="url" ref="slave_dbUrl"/>-->
    <!--</bean>-->
    <!--<bean id="slave_sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">-->
    <!--<property name="dataSource" ref="slave_ds"/>-->
    <!--</bean>-->

    <!-- Mybatis配置END -->

    <!-- DB基础配置END -->

</beans>